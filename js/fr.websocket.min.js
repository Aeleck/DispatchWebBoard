fr.ws=fr.config&&fr.user?{socket:null,clientId:"",reconnected:!1,initComp:!1,initConnection:function(){this.initComp?window.console.debug("fr.ws.initConnection - init completed already!"):(this.socket=new WebSocket(fr.config.WssURI),fr.user.hasPermission()&&(window.console.debug("fr.ws.initConnection - WS Connection Starting. DEBUG MODE ACTIVE."),this.socket.onmessage=(n=>{fr.ws.onMessage(n)}),this.socket.onerror=(n=>{fr.ws.onError(n)}),this.socket.onclose=(n=>{fr.ws.onClose(n)}),this.socket.onopen=(()=>{fr.ws.onOpen()}),this.initComp=!0))},onMessage:function(n){let e=JSON.parse(n.data);"welcome"===e.meta.action&&(this.clientId=e.meta.id,this.authenticateWSS()),this.onTPA(e)},onError:function(n){window.console.log("=Websocket Module Error="),window.console.log(n)},onOpen:function(){fr.user.hasPermission()&&(this.subscribe("0xDEADBEEF"),this.reconnected&&(window.console.debug("fr.ws.onOpen - WS Reconnected!"),this.onReconnect(),this.reconnected=!1))},onClose:function(n){!1===n.wasClean&&(window.console.debug("fr.ws.onClose - Disconnected from WSocket. Reconnecting..."),this.initComp=!1,setTimeout(this.initConnection,3e4),this.reconnected=!0)},onTPA:function(){},onReconnect:function(){},sendJson:function(n){if(fr.user.isAuthenticated())return 1!==this.socket.readyState?(this.socket.readyState>1&&(this.initComp=!1,this.initConnection()),void setTimeout(()=>{this.sendJson(n)},1e3)):void this.socket.send(JSON.stringify(n));window.console.debug("fr.ws.send - Sending failed, Not Authenticated")},send:function(n,e,i){this.sendJson({action:n,applicationId:this.clientId,data:e,meta:i})},authenticateWSS:function(){fr.user.hasPermission()?this.sendJson({action:"authorization",applicationId:this.clientId,bearer:fr.user.AuthHeader,data:{},meta:{}}):window.console.debug("fr.ws.authenticateWSS - Subscribing failed, Not API Authenticated")},subscribe:function(n){fr.user.hasPermission()?(window.console.debug("fr.ws.subscribe - Subscirbing to stream!"),this.sendJson({action:"stream:subscribe",applicationId:n,data:{},meta:{}})):window.console.debug("fr.ws.subscribe - Subscribing failed, Not Authenticated")},searchNickName:function(n,e){fr.user.hasPermission()?(window.console.debug("fr.ws.searchNickName - Searching for nick: "+n),this.sendJson({action:"nicknames:search",applicationId:this.clientId,nickname:n,data:{},meta:e||{}})):window.console.debug("fr.ws.searchNickName - Search failed, Not Authenticated")}}:null;