fr.ws=fr.config&&fr.user?{socket:null,initComp:!1,initConnection:function(){if(this.initComp)return debug&&window.console.log("fr.ws.initConnection - init completed already!"),Promise.reject("Init is already completed.");this.socket=new WebSocket(fr.config.WssURI),fr.user.hasPermission()&&(debug&&window.console.log("fr.ws.initConnection - WS Connection Starting. DEBUG MODE ACTIVE."),this.socket.onmessage=(e=>{fr.ws.onMessage(e)}),this.socket.onerror=(e=>{fr.ws.onError(e)}),this.socket.onclose=(e=>{fr.ws.onClose(e)}),this.socket.onopen=(()=>{fr.ws.onOpen()}),this.initComp=!0)},reconnected:!1,clientId:"",onOpen:function(){fr.user.hasPermission()&&(this.subscribe("0xDEADBEEF"),this.reconnected&&(debug&&window.console.log("fr.ws.onOpen - WS Connected!"),this.send("rescues:read",{open:"true"},{updateList:"true"}),this.reconnected=!1))},onClose:function(e){!1===e.wasClean&&(window.console.debug("fr.ws.onClose - Disconnected from WSocket. Reconnecting..."),this.initComp=!1,setTimeout(this.initConnection,6e4),this.reconnected=!0)},onMessage:function(data){let _data=eval("d = "+data.data);"welcome"===_data.meta.action&&(this.clientId=_data.meta.id,this.authenticateWSS()),this.HandleTPA(_data)},HandleTPA:function(){},onError:function(e){window.console.log("=Websocket Module Error="),window.console.log(e)},sendJson:function(e){if(fr.user.isAuthenticated())return 1!==this.socket.readyState?(this.socket.readyState>1&&(this.initComp=!1,this.initConnection()),void setTimeout(()=>{this.sendJson(e)},1e3)):void this.socket.send(JSON.stringify(e));window.console.debug("fr.ws.send - Sending failed, Not Authenticated")},send:function(e,n,i){this.sendJson({action:e,applicationId:this.clientId,data:n,meta:i})},authenticateWSS:function(){fr.user.hasPermission()?this.socket.send(JSON.stringify({action:"authorization",applicationId:this.clientId,bearer:fr.user.AuthHeader,data:{},meta:{}})):debug&&window.console.log("fr.ws.authenticateWSS - Subscribing failed, Not API Authenticated")},subscribe:function(e){fr.user.hasPermission()?(debug&&window.console.log("fr.ws.subscribe - Subscirbing to stream!"),this.socket.send(JSON.stringify({action:"stream:subscribe",applicationId:e}))):debug&&window.console.log("fr.ws.subscribe - Subscribing failed, Not Authenticated")},searchNickName:function(e,n){fr.user.hasPermission()?(debug&&window.console.log("fr.ws.searchNickName - Searching for nick: "+e),this.socket.send(JSON.stringify({action:"nicknames:search",applicationId:this.clientId,nickname:e,meta:n}))):debug&&window.console.log("fr.ws.searchNickName - Search failed, Not Authenticated")}}:null;