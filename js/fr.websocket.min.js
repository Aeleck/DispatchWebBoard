fr.ws=fr.config&&fr.user?{socket:null,initComp:!1,initConnection:function(){if(fr.ws.initComp)debug&&window.console.log("fr.ws.initConnection - init completed already!");else{if(fr.ws.socket=new WebSocket(fr.config.WssURI),!fr.user.isAuthenticated()||!fr.user.hasPermission())return;debug&&window.console.log("fr.ws.initConnection - WS Connection Starting. DEBUG MODE ACTIVE."),fr.ws.socket.onmessage=fr.ws.onMessage,fr.ws.socket.onerror=fr.ws.onError,fr.ws.socket.onclose=fr.ws.onClose,fr.ws.socket.onopen=fr.ws.onOpen,fr.ws.initComp=!0}},reconnected:!1,clientId:"",onOpen:function(){fr.user.isAuthenticated()&&fr.user.hasPermission()&&(fr.ws.subscribe("0xDEADBEEF"),fr.ws.reconnected&&(debug&&window.console.log("fr.ws.onOpen - WS Connected!"),fr.ws.send("rescues:read",{open:"true"},{updateList:"true"}),fr.ws.reconnected=!1))},onClose:function(e){!1===e.wasClean&&(debug&&window.console.log("fr.ws.onClose - Disconnected from WSocket. Reconnecting..."),fr.ws.initComp=!1,setTimeout(fr.ws.initConnection,6e4),fr.ws.reconnected=!0)},onMessage:function(data){let _data=eval("d = "+data.data);"welcome"===_data.meta.action&&(fr.ws.clientId=_data.meta.id,fr.ws.authenticateWSS()),fr.ws.HandleTPA(_data)},HandleTPA:function(e){},onError:function(e){window.console.log("=Websocket Module Error="),window.console.log(e)},send:function(e,n,s){if(fr.user.isAuthenticated()){if(1!==fr.ws.socket.readyState)return 0===fr.ws.socket.readyState||2!==fr.ws.socket.readyState&&3!==fr.ws.socket.readyState||(fr.ws.initComp=!1,fr.ws.initConnection()),void setTimeout(function(){fr.ws.send(e,n,s)},1e3);debug&&window.console.log("fr.ws.send - Sending TPA"),fr.ws.socket.send(JSON.stringify({action:e,applicationId:fr.ws.clientId,data:n,meta:s}))}else debug&&window.console.log("fr.ws.send - Sending failed, Not Authenticated")},authenticateWSS:function(){fr.user.isAuthenticated()&&fr.user.hasPermission()?fr.ws.socket.send(JSON.stringify({action:"authorization",applicationId:fr.ws.clientId,bearer:fr.user.AuthHeader,data:{},meta:{}})):debug&&window.console.log("fr.ws.authenticateWSS - Subscribing failed, Not API Authenticated")},subscribe:function(e){fr.user.isAuthenticated()&&fr.user.hasPermission()?(debug&&window.console.log("fr.ws.subscribe - Subscirbing to stream!"),fr.ws.socket.send(JSON.stringify({action:"stream:subscribe",applicationId:e}))):debug&&window.console.log("fr.ws.subscribe - Subscribing failed, Not Authenticated")},searchNickName:function(e,n){if(fr.user.isAuthenticated()&&fr.user.hasPermission()){if(1!==fr.ws.socket.readyState)return 0===fr.ws.socket.readyState||2!==fr.ws.socket.readyState&&3!==fr.ws.socket.readyState||(fr.ws.initComp=!1,fr.ws.initConnection()),void setTimeout(function(){fr.ws.searchNickName(e,n)},1e3);debug&&window.console.log("fr.ws.searchNickName - Searching for nick: "+e),fr.ws.socket.send(JSON.stringify({action:"nicknames:search",applicationId:fr.ws.clientId,nickname:e,meta:n}))}else debug&&window.console.log("fr.ws.searchNickName - Search failed, Not Authenticated")}}:null;